// Code generated by entc, DO NOT EDIT.

package user

import (
	"time"

	"github.com/minskylab/collecta/ent/schema"
)

const (
	// Label holds the string label denoting the user type in the database.
	Label = "user"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldName holds the string denoting the name vertex property in the database.
	FieldName = "name"
	// FieldUsername holds the string denoting the username vertex property in the database.
	FieldUsername = "username"
	// FieldLastActivity holds the string denoting the lastactivity vertex property in the database.
	FieldLastActivity = "last_activity"
	// FieldPicture holds the string denoting the picture vertex property in the database.
	FieldPicture = "picture"

	// Table holds the table name of the user in the database.
	Table = "users"
	// AccountsTable is the table the holds the accounts relation/edge.
	AccountsTable = "accounts"
	// AccountsInverseTable is the table name for the Account entity.
	// It exists in this package in order to avoid circular dependency with the "account" package.
	AccountsInverseTable = "accounts"
	// AccountsColumn is the table column denoting the accounts relation/edge.
	AccountsColumn = "user_accounts"
	// ContactsTable is the table the holds the contacts relation/edge.
	ContactsTable = "contacts"
	// ContactsInverseTable is the table name for the Contact entity.
	// It exists in this package in order to avoid circular dependency with the "contact" package.
	ContactsInverseTable = "contacts"
	// ContactsColumn is the table column denoting the contacts relation/edge.
	ContactsColumn = "user_contacts"
	// SurveysTable is the table the holds the surveys relation/edge.
	SurveysTable = "surveys"
	// SurveysInverseTable is the table name for the Survey entity.
	// It exists in this package in order to avoid circular dependency with the "survey" package.
	SurveysInverseTable = "surveys"
	// SurveysColumn is the table column denoting the surveys relation/edge.
	SurveysColumn = "user_surveys"
	// DomainTable is the table the holds the domain relation/edge.
	DomainTable = "users"
	// DomainInverseTable is the table name for the Domain entity.
	// It exists in this package in order to avoid circular dependency with the "domain" package.
	DomainInverseTable = "domains"
	// DomainColumn is the table column denoting the domain relation/edge.
	DomainColumn = "domain_users"
)

// Columns holds all SQL columns for user fields.
var Columns = []string{
	FieldID,
	FieldName,
	FieldUsername,
	FieldLastActivity,
	FieldPicture,
}

// ForeignKeys holds the SQL foreign-keys that are owned by the User type.
var ForeignKeys = []string{
	"domain_users",
}

var (
	fields = schema.User{}.Fields()

	// descName is the schema descriptor for name field.
	descName = fields[1].Descriptor()
	// NameValidator is a validator for the "name" field. It is called by the builders before save.
	NameValidator = descName.Validators[0].(func(string) error)

	// descLastActivity is the schema descriptor for lastActivity field.
	descLastActivity = fields[3].Descriptor()
	// DefaultLastActivity holds the default value on creation for the lastActivity field.
	DefaultLastActivity = descLastActivity.Default.(func() time.Time)
)
