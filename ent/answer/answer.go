// Code generated by entc, DO NOT EDIT.

package answer

import (
	"time"

	"github.com/minskylab/collecta/ent/schema"
)

const (
	// Label holds the string label denoting the answer type in the database.
	Label = "answer"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldAt holds the string denoting the at vertex property in the database.
	FieldAt = "at"
	// FieldResponses holds the string denoting the responses vertex property in the database.
	FieldResponses = "responses"
	// FieldValid holds the string denoting the valid vertex property in the database.
	FieldValid = "valid"

	// Table holds the table name of the answer in the database.
	Table = "answers"
	// QuestionTable is the table the holds the question relation/edge.
	QuestionTable = "answers"
	// QuestionInverseTable is the table name for the Question entity.
	// It exists in this package in order to avoid circular dependency with the "question" package.
	QuestionInverseTable = "questions"
	// QuestionColumn is the table column denoting the question relation/edge.
	QuestionColumn = "question_answers"
)

// Columns holds all SQL columns for answer fields.
var Columns = []string{
	FieldID,
	FieldAt,
	FieldResponses,
	FieldValid,
}

// ForeignKeys holds the SQL foreign-keys that are owned by the Answer type.
var ForeignKeys = []string{
	"question_answers",
}

var (
	fields = schema.Answer{}.Fields()

	// descAt is the schema descriptor for at field.
	descAt = fields[1].Descriptor()
	// DefaultAt holds the default value on creation for the at field.
	DefaultAt = descAt.Default.(func() time.Time)
)
