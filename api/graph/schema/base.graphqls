scalar Time
scalar Map

type User {
    id: ID!
    name: String!
    username: String!
    lastActivity: Time!
    picture: String!
    roles: [String!]!
    accounts: Account!
    contacts: Contact!
    surveys: [Survey!]!
    domains: Domain!
    adminOf: [Domain!]!
}

type Survey {
    id: ID!
    tags: [String!]!
    lastInteraction: Time!
    dueDate: Time!
    title: String!
    description: String!
    metadata: Map!
    done: Boolean!
    isPublic: Boolean!
    flow: Flow!
    for: User!
    owner: Domain!
}

type Domain {
    id: ID!
    tags: [String!]!
    name: String!
    email: String!
    domain: String!
    collectaDomain: String!
    surveys: [Survey!]!
    users: [User!]!
    admins: [User!]!
}

type Contact {
    id: ID!
    name: String
    value: String!
    kind: String!
    principal: Boolean!
    validated: Boolean!
    fromAccount: Boolean!
    owner: User!
}

type Account {
    id: ID!
    type: String!
    sub: String!
    remoteID: String!
    secret: String!
    owner: User!
}

type Question {
    id: ID!
    hash: String!
    title: String!
    description: String!
    anonymous: Boolean!
    metadata: Map!
    validator: String!
    answers: [Answer!]!
    input: Input!
    flow: Flow!
}

type Input {
    id: ID!
    kind: String!
    multiple: Boolean!
    defaults: [String]!
    options: Map!
    question: Question!
}

type Answer {
    id: ID!
    at: Time!
    responses: [String!]!
    valid: Boolean!
    question: Question!
}

type Flow {
    id: ID!
    state: ID!
    stateTable: String!
    initialState: ID!
    terminationState: ID!
    pastState: ID!
    inputs: [String!]!
    questions: [Question!]!
}

type Short {
    key: String!
    value: ID!
}