# Where are all the schema files located? globs are supported eg  src/**/*.graphqls
schema:
  - graph/schema/*.graphqls

# Where should the generated server code go?
exec:
  filename: graph/generated/generated.go
  package: generated

# Uncomment to enable federation
# federation:
#   filename: graph/generated/federation.go
#   package: generated

# Where should any generated models go?
model:
  filename: graph/model/models_gen.go
  package: model

# Where should the resolver implementations go?
resolver:
  layout: follow-schema
  dir: graph
  package: graph

# Optional: turn on use `gqlgen:"fieldName"` tags in your models
# struct_tag: json

# Optional: turn on to use []Thing instead of []*Thing
# omit_slice_element_pointers: false

# Optional: set to speed up generation time by not performing a final validation pass.
# skip_validation: true

# gqlgen will search for any type names in the schema in these go packages
# if they match it will use them, otherwise it will generate them.
autobind:
  - "github.com/minskylab/collecta/api/graph/model"

# This section declares type mapping between the GraphQL and go type systems
#
# The first line in each type will be used as defaults for resolver arguments and
# modelgen, the others will be allowed when binding to fields. Configure them to
# your liking
models:
  ID:
    model:
      - github.com/minskylab/collecta/uuid.UUID
  AccountType:
    model:
      - github.com/minskylab/collecta/ent/account.Type
  Account:
    model:
      - github.com/minskylab/collecta/ent.Account
    fields:
      owner:
        resolver: true
  Answer:
    model:
      - github.com/minskylab/collecta/ent.Answer
    fields:
      question:
        resolver: true
  ContactKind:
    model:
      - github.com/minskylab/collecta/ent/contact.Kind
  Contact:
    model:
      - github.com/minskylab/collecta/ent.Contact
    fields:
      owner:
        resolver: true
  Device:
    model:
      - github.com/minskylab/collecta/ent.Device
    fields:
  Domain:
    model:
      - github.com/minskylab/collecta/ent.Domain
    fields:
      surveys:
        resolver: true
      users:
        resolver: true
      admins:
        resolver: true
  Flow:
    model:
      - github.com/minskylab/collecta/ent.Flow
    fields:
      survey:
        resolver: true
      questions:
        resolver: true
  IP:
    model:
      - github.com/minskylab/collecta/ent.IP
    fields:
  InputKind:
    model:
      - github.com/minskylab/collecta/ent/input.Kind
  Input:
    model:
      - github.com/minskylab/collecta/ent.Input
    fields:
      question:
        resolver: true
  Person:
    model:
      - github.com/minskylab/collecta/ent.Person
    fields:
      accounts:
        resolver: true
      contacts:
        resolver: true
      surveys:
        resolver: true
      domains:
        resolver: true
      adminOf:
        resolver: true
  Question:
    model:
      - github.com/minskylab/collecta/ent.Question
    fields:
      answers:
        resolver: true
      input:
        resolver: true
      flow:
        resolver: true
  Short:
    model:
      - github.com/minskylab/collecta/ent.Short
    fields:
  Survey:
    model:
      - github.com/minskylab/collecta/ent.Survey
    fields:
      flow:
        resolver: true
      for:
        resolver: true
      owner:
        resolver: true

